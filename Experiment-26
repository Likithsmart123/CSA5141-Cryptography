#include <stdio.h>
int gcd(int a, int b) {
    while (b != 0) {
        int temp = b;
        b = a % b;
        a = temp;
    }
    return a;
}
int multiplicative_inverse(int e, int phi_n) {
    int t = 0, new_t = 1;
    int r = phi_n, new_r = e;
    while (new_r != 0) {
        int quotient = r / new_r;
        int temp = new_t;
        new_t = t - quotient * new_t;
        t = temp;
        temp = new_r;
        new_r = r - quotient * new_r;
        r = temp;
    }
    if (r > 1) return -1; 
    if (t < 0) t += phi_n;
    return t;
}

int main() {
    int e = 31, n = 3599;
    int p = 59, q = 61; 
    int phi_n = (p - 1) * (q - 1);

    int d = multiplicative_inverse(e, phi_n);

    printf("Private key (d): %d\n", d);
    return 0;
}
